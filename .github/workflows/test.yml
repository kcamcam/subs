name: Test
on: [push, pull_request]
jobs:
  linting-tests:
    name: Rubocop
    runs-on: ubuntu-20.04 # ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0.0
      - name: Install Rubocop
        run: gem install rubocop
      - name: Run Rubocop
        run: rubocop app
  audit:
    name: Audit
    runs-on: ubuntu-20.04 # ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0.0
      - name: Install Bundler Audit
        run: gem install bundler-audit
      - name: Audit Dependencies
        run: |
          bin/bundler-audit --update
          bin/brakeman -q -w2
  unit-tests:
    name: RSpec
    runs-on: ubuntu-20.04 # ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - '5432:5432'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0.0
      - name: Install Postgres Client
        run: sudo apt-get install libpq-dev
      - name: Ruby gems cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install bundler
        run: gem install bundler
      - name: Install Dependencies
        run: bundle install --path vendor/bundle
      - name: Create database
        env:
          RAILS_ENV: test
        run: |
          cp config/database.github.yml config/database.yml
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test
      - name: Run RSpec
        run: bundle exec rake # rspec