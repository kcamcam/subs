name: Test
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-20.04 #ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # RUBY
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0.0
      # GEMS
      - name: Ruby gems cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Setup Bundler
        run: gem install bundler:2.2.5
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      # NODE
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      # YARN
      - name: Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      # RAILS
      - name: Setup Rails
        env:
          RAILS_ENV: test
        run: |
          sudo apt-get -yqq install libpq-dev
          bundle config path vendor/bundle
          bundle config set --local deployment 'false'
          bundle install --jobs 4 --retry 3
          cp config/database.github.yml config/database.yml
          bundle exec rails db:create
          bundle exec rails db:migrate
          yarn --frozen-lockfile
      # TEST
      - name: RSpec
        run: bundle exec rspec
      # LINTER
      - name: Linter
        run: |
          bin/rubocop app
      # AUDIT
      - name: Audit Packages
        run: |
          bin/bundler-audit --update
          bin/brakeman -q -w2